Padrao de projetos  

----------------------------------------------------
https://github.com/LeoneRocha/SmartDigitalPsicoAPI/tree/developer
https://lionscorp.visualstudio.com/SMARTDIGITALPSICO 
https://portal.azure.com/#home
https://painelbd.host.uol.com.br/main.html?servicetype=mysql
https://sonarcloud.io/project/branches_list?id=lionscorp_smartdigitalpsico
https://hub.docker.com/u/leonecr
** para gerar pro mysql tem que gerar do zero a migracao 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Regras a validar e implantar

ADM nao pode ver arquivos do medico

  
 ------------------------------------------------------------------------ ETAPAS CLOUD   AZ_01  - EM ANDAMENTO  ------------------------------------------------------------------------ 
 --- IMPLANTAR STORAGE BLOB PARA ARQUIVOS 

 --- IMPLANTAR STORAGE TABLE PARA CACHE 

 -- IMPLANTAR AUTENTICACAO AZURE 
 https://learn.microsoft.com/en-us/entra/identity-platform/tutorial-v2-angular-auth-code
 https://learn.microsoft.com/en-us/azure/active-directory-b2c/enable-authentication-angular-spa-app

 https://medium.com/@sifatandel4nov/simplified-guide-integrating-msal-and-azure-ad-authentication-in-your-angular-application-e223f4a8b058

 https://learn.microsoft.com/en-us/samples/azure-samples/ms-identity-ciam-javascript-tutorial/ms-identity-ciam-javascript-tutorial-2-sign-in-angular/

 tenho uma aplicacao em angular typescript  e uma web api em C# .net 8 core quero implantar o azure active directory entra id e tambem deixar o jwt token  tambem funcionando 



 ------------------------------------------------------------------------ ETAPAS CLOUD   AZ_01  - EM ANDAMENTO  ------------------------------------------------------------------------ 

 ------------------------------------------------------------------------ UPLOAD ARQUIVOS  CLOUD -   ------------------------------------------------------------------------ 

 ---1) FAZER UPLOAD NO STORAGE - OK 

 ---2) FAZER DOWNLOAD NO STORAGE  - OK 
  
 ---3) DELETAR NO STORAGE   - OK 

 ---3) APLICAR RBAC para somente ter permisao o proprio usuario que subiu "medico" -- SO VAI SER POSSIVEL APOS IMPLANTAR O AZURE AD (ENTRA)

------------------------------------------------------------------------ UPLOAD ARQUIVOS  CLOUD -   ------------------------------------------------------------------------ 


 ------------------------------------------------------------------------ Readequacao  1  - CONCLUIDO ------------------------------------------------------------------------ 
 --resiliency-
 Em uma consulta EF pode se aplicar retry police que excutara o codigo de consulta de acordo com a politica criada
 ---------------------
01  - Domain ------- Finalizado 
02  - Data ------- Finalizado  
03  - Service -------  Finalizado 
04  - API ------- Finalizado 
05  - Testar Localmente sem DOCKER ------- Finalizado  
06  - reduzido codigo de generico duplicado ------- Finalizado 
07  - MIGRAR DATA NOTATION PARA FLUENT API  ------- Finalizado
08  - Ajustar a carga de mock ------- Finalizado
09  - Revisar o service para ver se ainda usa entidadee em vez do ID mudar pra ID as FK ------- Finalizado
10  - Mudar para MYSQL ------- Finalizado
11  - Automação ------------ Finalizado
12  - HABLITAR SONNAR ------------ Finalizado

13  - HABLITAR DOCKER----------------- Finalizado
-- ADICIONADO SUPORTE ------- Finalizado
-- CRIADO SERVICE CONNECTION ------- Finalizado
-- TESTE MANUAL PARA REGISTRAR NO DOCKER HUB------- Finalizado
-- FAZER A PIPE LINE  PUBLICAR NO DOCKER HUB ------- Finalizado PARCIAL

---- RODAR A IMAGEM DO HUB LOCAL  -- OK

-- FAZER A RELEASE UTILIZAR O DOCKER HUB PAGAR IMAGEN NA PUBLICACAO  -- PARCIAL

-------------------------------------------------------
- 1) Configurar ao realizar pull request para integration disparar pipeline integration  ------- Finalizado

- 2) Configurar a integration para Deploy automatico  ------- Finalizado

- 3) Configurar ao realizar pull request para staging disparar pipeline staging  ------- Finalizado
	
- 4) Configurar ao realizar pull request para master disparar pipeline master ------- Finalizado

- 5) Configurar o sonar (CODE QUALITY) ------- Finalizado

- 6) Habilitar docker  ------- Finalizado
 
------------------------------------------------------- 

------------------------------------------------------------------------ Readequacao  1 - CONCLUIDO ------------------------------------------------------------------------ 

 
------------------------------------------------------------------------ Readequacao  2  CONCLUIDO  ------------------------------------------------------------------------ 
 
1) - Atuar nos erros do sonar (CODE QUALITY) Finalizado

------------------------------------------------------------------------ Readequacao  2  CONCLUIDO  ------------------------------------------------------------------------ 
 
  ------------------------------------------------------------------------ Readequacao  3 PENDENTE ------------------------------------------------------------------------ 

1) - CRIAR PROJETO DE TESTE UNITARIO DO DATA -- 

https://macoratti.net/20/08/c_faked1.htm
https://www.nuget.org/packages/bogus

2) - TESTAR O SISTEMA VIA TELA  ------  CONCLUIDO


------------------------------------------------------------------------ Readequacao  3 PENDENTE ------------------------------------------------------------------------ 



------------------------------------------------------------------------ UI CI CD ------------------------------------------------------------------------ 

  https://www.youtube.com/watch?v=NFqrWsUPCAM




  Add-Migration UpdateDescriptionRecordPatient -Context SmartDigitalPsicoDataContext -OutputDir Migrations -Project SmartDigitalPsico.Data

 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 

*** rEPOSITORIO AI INSERIR SETAR ENABLE COMO TRUE
----------------------------------------------------
EF TIPS 

COMANDO 1 )					Add-Migration InitialCreate -Context SmartDigitalPsicoDataContext -OutputDir Migrations -Project SmartDigitalPsico.Data

COMANDO 2 )					Update-Database -Project  "SmartDigitalPsico.Data" -StartUpProject "SmartDigitalPsico.WebAPI" -Context SmartDigitalPsicoDataContext

COMANDO 3 "DELETAR" )		Update-Database -Migration 0 -Project  "SmartDigitalPsico.Data" -StartUpProject "SmartDigitalPsico.WebAPI" -Context SmartDigitalPsicoDataContext


NO APPSETINGS PARA O JWT FUNCIONAR PRECISA POR A CHAVE 

using (var hmac = new HMACSHA512())
{
byte[] key = hmac.Key;
secretKey = Convert.ToBase64String(key);

}

//Migrar o idimas da tabela para arquivo JSON.



Add-Migration UpdateConfig_03 -Context SmartDigitalPsicoDataContext -OutputDir Migrations -Project SmartDigitalPsico.Data

Remove-Migration -Context SmartDigitalPsicoDataContext -Project SmartDigitalPsico.Data
Add-Migration UpdateFileTableCloud -Context SmartDigitalPsicoDataContext -OutputDir Migrations -Project SmartDigitalPsico.Data

--------- Para ativar o gatilho do github basta ativar a extensao do azure pipelines 
--GERAR A IMAGEM E SUBIR NO DOCKER
docker-compose build --force-rm

-- EXECUTAR 
docker-compose up

--VER IMAGENS CRIADA
docker images 

 
PS D:\GITHUB\SmartDigitalPsicoAPI> docker build . -t leonecr/smartdigitalpsicoapi_local:latest --force-rm --no-cache


docker build . -t leonecr/smartdigitalpsicowebapi_image:latest --force-rm --no-cache
 

$env:APPDATA = "C:/Users/leocr/AppData/Roaming"


docker run 
-v C:/Users/leocr/AppData/Roaming/Microsoft/UserSecrets:/root/.microsoft/usersecrets 
-v C:/Users/leocr/AppData/Roaming/ASP.NET/Https:/root/.aspnet/https 
-p 0:443 -p 0:3000 -p 0:8080 -p 0:80 leonecr/smartdigitalpsicoapi_local:latest




docker run -v C:/Users/leocr/AppData/Roaming/Microsoft/UserSecrets:/root/.microsoft/usersecrets -v C:/Users/leocr/AppData/Roaming/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets  -v C:/Users/leocr/AppData/Roaming/ASP.NET/Https:/root/.aspnet/https -v C:/Users/leocr/AppData/Roaming/ASP.NET/Https:/home/app/.aspnet/https -p 0:443 -p 0:3000 -p 0:8080 -p 0:80 leonecr/smartdigitalpsicoapi_local:latest



docker run -v C:/Users/leocr/AppData/Roaming/Microsoft/UserSecrets:/root/.microsoft/usersecrets -v C:/Users/leocr/AppData/Roaming/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets  -v C:/Users/leocr/AppData/Roaming/ASP.NET/Https:/root/.aspnet/https -v C:/Users/leocr/AppData/Roaming/ASP.NET/Https:/home/app/.aspnet/https -p 0:443 -p 0:3000 -p 0:8080 -p 0:80 leonecr/smartdigitalpsicoapihomolog:latest


https://fernando-silva.medium.com/habilitando-api-do-docker-de-forma-segura-a0db2e650892
  
  https://www.youtube.com/watch?v=lcaDDxJv260
  https://www.youtube.com/watch?v=rBc93sCcwIE
  https://www.youtube.com/watch?v=MaTmUlDALfk

  https://www.youtube.com/watch?v=rBc93sCcwIE

--docker run -d -p 443:443 --name nome-do-seu-container smartdigitalpsicowebapi_image

--docker run -d -p 443:443  smartdigitalpsicowebapi_image

--verificar se o contêiner Docker está sendo executado corretamente
docker ps

---------DOCKER ETPAS MANUAL 
docker login -u seu-usuario -p sua-senha

# Criar a imagem localmente
docker-compose up --build

docker-compose -f docker-compose.yml build --force-rm

#publicar a imagem no registro
docker push leonecr/smartdigitalpsicowebapi_image:latest
 

docker push leonecr/smartdigitalpsicowebapi_image:latest


docker build . -t leonecr/smartdigitalpsicowebapi_image:latest

--- 
docker run -p 54814:80 smartdigitalpsicowebapi_image --name smartdigitalpsicowebapi_app0
docker run -p 54815:443 smartdigitalpsicowebapi_image --name smartdigitalpsicowebapi_app1
-p 54815:80: Esta opção mapeia a porta 54815 do seu host para a porta 80 do contêiner Docker. Isso significa que qualquer tráfego que chega à porta 54815 do seu host será encaminhado para a porta 80 do contêiner Docker.


EM um projeto C# .net 8 web api configurei o docker file e docker compose  e ao rodar 
docker-compose up a imagem container nao abre as portas 80 vide imagem para detalhes 


mESMO ASSIM NAO FUNCIONOU DOCKER INTERNAMENTE RODA POREM NAO CONSIGO ACESSAR NA MAQUINA HOST


Entendo que você ainda está enfrentando problemas para acessar o aplicativo na máquina host, mesmo com o Docker rodando internamente. Aqui estão algumas outras coisas que você pode verificar:

Firewall/Segurança de Rede: Verifique se o firewall ou as configurações de segurança da rede estão permitindo o tráfego nas portas que você está tentando usar.
Verifique o IP do Container Docker: Às vezes, o problema pode estar relacionado ao endereço IP do container Docker. Você pode tentar acessar o aplicativo usando o IP do container Docker em vez de localhost. Você pode obter o IP do container Docker usando o seguinte comando no terminal:


docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' smartdigitalpsico_api_container


Verifique o Log do Container: Verifique os logs do container Docker para ver se há alguma mensagem de erro ou aviso que possa indicar o problema. Você pode fazer isso com o seguinte comando:
docker logs container_id_or_name

Espero que isso ajude! Se você ainda estiver enfrentando problemas, por favor, me avise!

172.19.0.2
docker logs smartdigitalpsico_api_container


Se isso não resolver o problema, pode ser útil verificar se há algum outro serviço na sua máquina host que possa estar usando as portas 80 e 443. Você pode fazer isso usando o comando netstat -ano | findstr :<port_number>. Se algum serviço estiver usando essas portas, você pode precisar parar esse serviço ou usar diferentes portas para o seu aplicativo.


netstat -ano | findstr :57190

Obrigado por compartilhar a saída do comando netstat. A partir desta saída, podemos ver que a porta 57190 está de fato aberta e ouvindo conexões. Isso indica que o Docker está configurado corretamente para mapear a porta do container para a porta do host.

Se você ainda não consegue acessar o aplicativo na máquina host, pode ser um problema com o aplicativo em si. Aqui estão algumas coisas que você pode verificar:

Logs do Aplicativo: Verifique os logs do aplicativo para ver se há alguma mensagem de erro ou aviso que possa indicar o problema. Você pode fazer isso com o seguinte comando:
docker logs smartdigitalpsico_api_container

Configuração do Aplicativo: Certifique-se de que o aplicativo está configurado para ouvir em todas as interfaces de rede (0.0.0.0), não apenas localhost (127.0.0.1).
Teste de Conectividade Interna: Você pode tentar se conectar ao aplicativo a partir de dentro do próprio container Docker para ver se o aplicativo está funcionando corretamente. Você pode fazer isso com o seguinte comando:
docker exec -it smartdigitalpsico_api_container curl localhost:80

Espero que isso ajude! Se você ainda estiver enfrentando problemas, por favor, me avise!







--
https://imasters.com.br/devsecops/devops-ci-cd-azure-pipeline-docker-yaml
---

 
 docker-compose -f docker-compose.yml build --force-rm


docker build . -t leonecr/smartdigitalpsicowebapi_image:latest

docker run -p 8088:80 leonecr/smartdigitalpsicowebapiimage:dev

docker run -p :80 -p :443 leonecr/smartdigitalpsicowebapiimage:dev

 
docker port id_do_container"

docker inspect sharp_neumann | findstr "IPAddress"

docker inspect -f '{{range $key, $value := .NetworkSettings.Networks}}{{$key}} {{end}}' sharp_neumann

docker network inspect -f '{{range .Containers}}{{.Name}} {{end}}' dockercompose14570377054258267338_smartdigitalpsiconetwork

"





# Imagem base
FROM mcr.microsoft.com/dotnet/core/sdk:8 AS build-env
WORKDIR /app

# Copia csproj e restaura dependências
COPY *.csproj ./
RUN dotnet restore

# Copia tudo e compila
COPY . ./
RUN dotnet publish -c Release -o out

# Gera imagem de runtime
FROM mcr.microsoft.com/dotnet/core/aspnet:8
WORKDIR /app
COPY --from=build-env /app/out .

# Copia o certificado SSL
COPY certificate.pfx .

# Configura variáveis de ambiente para o certificado SSL
ENV ASPNETCORE_URLS="https://+;http://+"
ENV ASPNETCORE_HTTPS_PORT=443
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="password"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path="./certificate.pfx"

# Expõe as portas 80 e 443
EXPOSE 80
EXPOSE 443

ENTRYPOINT ["dotnet", "YourWebApi.dll"]

public class Program
{
    public static void Main(string[] args)
    {
        CreateHostBuilder(args).Build().Run();
    }

    public static IHostBuilder CreateHostBuilder(string[] args) =>
        Host.CreateDefaultBuilder(args)
            .ConfigureWebHostDefaults(webBuilder =>
            {
                webBuilder.UseStartup<Startup>()
                          .UseUrls("http://*:80", "https://*:443"); // Configura o Kestrel para ouvir nas portas 80 e 443
            });
}


webBuilder.UseKestrel(serverOptions =>
{
    serverOptions.Listen(IPAddress.Any, 80);
    serverOptions.Listen(IPAddress.Any, 443, listenOptions =>
    {
        listenOptions.UseHttps("certificate.pfx", "password");
    });
})
.UseStartup<Startup>();



# Copia o certificado SSL
COPY certificate.pfx .

# Configura variáveis de ambiente para o certificado SSL
ENV ASPNETCORE_URLS="https://+;http://+"
ENV ASPNETCORE_HTTPS_PORT=443
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="password"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path="/app/certificate.pfx"





docker run -it --rm  leonecr/smartdigitalpsicoapi:latest /bin/bash



EM C# ajuste o codigo para o erro mencionado pelo sonarcloud "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Make the serialization constructor 'protected'." should not be thrown by user code." seja resolvido 
using System.Runtime.Serialization;

namespace SmartDigitalPsico.Domain.Helpers
{
    [Serializable]
    public class AppWarningException : Exception
    {
        protected AppWarningException()
        {
        }

        public AppWarningException(string? message) : base(message)
        {
        }

        public AppWarningException(string? message, Exception? innerException) : base(message, innerException)
        {
        }
        public AppWarningException(SerializationInfo info, StreamingContext context) : base(info, context)
        {
        }
    }
}



Gere para mim um readme para git hub que tenha todas as secoes possiveis para documentar uma API rest full em C# .NET core 8 e usando docker sendo publicado no azure e com as pipelines e releases via azure devops 
crie a secao Badges de build e de releases gere tudo em markdown. 

Segue um breve resumo: 
Nome do sistema : SmartDigitalPsico

Descricao breve: Atendimento Inteligente Digital De Pacientes de Psicologia

Objetivo: Sistema de cadastro de prontuário de paciente de psicologia.


https://blog.rocketseat.com.br/como-fazer-um-bom-readme/

https://github.com/tgmarinho/README-ecoleta/blob/master/README.md

https://gist.github.com/reginadiana/e044fe93ed81aa04a10361cb841c0409

https://github.com/mauricioromagnollo/ecoleta

https://github.com/Ileriayo/markdown-badges

https://github.com/alexandresanlim/Badges4-README.md-Profile?tab=readme-ov-file#-analytics-

https://gist.github.com/rxaviers/7360908
https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md#objects

# SmartDigitalPsico

!Build Status
!Release Status

## Descrição

Atendimento Inteligente Digital De Pacientes de Psicologia. Sistema de cadastro de prontuário de paciente de psicologia.

## Índice

- Instalação
- Uso
- Documentação da API
- Testes
- Deploy
- Contribuição

## Instalação

Este projeto usa .NET Core 8 e Docker. Instruções para instalar:

```bash
# clone o repositório
git clone https://github.com/seuusuario/SmartDigitalPsico.git

# navegue até o diretório do projeto
cd SmartDigitalPsico

# construa a imagem Docker
docker build -t smartdigitalpsico .

# execute o contêiner Docker
docker run -p 8080:80 smartdigitalpsico


--- IA  
https://www.codium.ai/?gad_source=1&gclid=Cj0KCQjw3ZayBhDRARIsAPWzx8opfHMeBxKDpv0RxPJXdrNvnNoWmVN5OnaMjXYm17OAvoVwSvd3yL8aAoiYEALw_wcB

 <NoWarn>$(NoWarn);S1192</NoWarn>
 
   <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable> 
  </PropertyGroup>



Em C# ajuste o codigo abaixo para corrigir o erro do sonarcloud "The parameter name 'fileName' is not declared in the argument list."
  
Trecho:   
 throw new ArgumentNullException(nameof(fileName), "FileName cannot be null.");
  
 
 
Codigo:    
 
 
 
Em C# refatore codigo abaixo para reduzir complexidade e seguir boas praticas de codigo limpo 
Codigo:  







ng build --configuration=production

ng build --configuration=homologation

ng serve --configuration=production










-------------------- TESTE UNITARIO 

Em C# .net core 8 usando NUnit 4 usando padrao novo That  e Moq gere teste unitario seguindo padroes de nomeclatura, gere o teste do codigo abaixo, o teste precisa ter um cenario de sucesso. para mais de um assert use o Assert.Multiple

 

USE DE EXEMPLO O CODIGO ABAIXO 
  [Test]
        public async Task Create_Success()
        {
            // Arrange
            var mockFull = GenderMockHelper.GetMock().AsQueryable();
            SetupContext(mockFull);
            var mockData = GenderMockHelper.GetMock().Take(1).AsQueryable().First();
            var data = createNewEntity(mockData);
            _mockContext = _mockContext ?? new SmartDigitalPsicoDataContextTest();

            // Inicialize  Repository
            _mockContext = _mockContext ?? new SmartDigitalPsicoDataContextTest();
            _entityRepository = new GenderRepository(_mockContext, new PolicyConfig());

            // Act
            var result = await _entityRepository.Create(data);

            var target = await _mockContext.Genders.FirstAsync(e => e.Description.Equals(data.Description, StringComparison.OrdinalIgnoreCase));

            //Assert  
            Assert.Multiple(() =>
            {
                Assert.That(result, Is.EqualTo(data));
                Assert.That(target, Is.Not.Null);
            });
        }

















        Em C# .net core 8 o codigo abaixao usando o FluentValidation melhore o codigo para validar os campos FileExtension e FileContentType para apenas tipos de arquivos como imagens word e excel e pdf e impedir arquivos maliciosos e que exceda mais que 100 mb e que os tipos de arquivos seja possivel definir via appsetings 

 public MedicalFileValidator(IMedicalFileRepository entityRepository, IMedicalRepository medicalRepository, IUserRepository userRepository) : base(medicalRepository, entityRepository, userRepository)
 { 

     #region Columns
     RuleFor(entity => entity.Description)
         .MaximumLength(255)
         .WithMessage("O Description não pode ultrapassar {MaxLength} carateres.");

     RuleFor(entity => entity.FilePath)
         .MaximumLength(2083)
         .WithMessage("O FilePath não pode ultrapassar {MaxLength} carateres.");

     RuleFor(entity => entity.FileExtension)
      .MaximumLength(3)
      .WithMessage("O FileExtension não pode ultrapassar {MaxLength} carateres.");

     RuleFor(entity => entity.FileContentType)
      .MaximumLength(100)
      .WithMessage("O FileContentType não pode ultrapassar {MaxLength} carateres.");

     #endregion Columns

     #region Relationship
     RuleFor(entity => entity.MedicalId)
     .NotNull()
     .WithMessage("ErrorValidator_MedicalId_Null")
     .MustAsync(async (entity, value, c) => await MedicalIdFound(entity))
     .WithMessage("ErrorValidator_MedicalId_NotFound")
     .MustAsync(async (entity, value, c) => await MedicalIdChanged(entity))
     .WithMessage("ErrorValidator_Medical_Changed")
     .MustAsync(async (entity, value, c) => await MedicalCreated(entity, value, entity.CreatedUserId))
     .WithMessage("ErrorValidator_MedicalCreated_Invalid")
     .MustAsync(async (entity, value, c) => await MedicalModify(entity, value, entity.ModifyUserId))
     .WithMessage("ErrorValidator_MedicalModify_Invalid");

     #endregion Relationship
 }

Claro! Aqui está uma versão aprimorada do código para validar os campos `FileExtension` e `FileContentType` usando FluentValidation em C# .NET Core 8. Este código garante que apenas arquivos de imagem, Word, Excel e PDF sejam aceitos, impede arquivos maliciosos e limita o tamanho dos arquivos a 100 MB.

```csharp
using FluentValidation;
using Microsoft.AspNetCore.Http;
using System.Linq;

public class FileValidator : AbstractValidator<IFormFile>
{
    private readonly string[] _permittedExtensions = { ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".doc", ".docx", ".xls", ".xlsx", ".pdf" };
    private readonly string[] _permittedContentTypes = { "image/jpeg", "image/png", "image/gif", "image/bmp", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/pdf" };
    private const long MaxFileSize = 100 * 1024 * 1024; // 100 MB

    public FileValidator()
    {
        RuleFor(file => file.Length)
            .NotNull()
            .LessThanOrEqualTo(MaxFileSize)
            .WithMessage("O tamanho do arquivo não pode exceder 100 MB.");

        RuleFor(file => file.FileName)
            .NotNull()
            .Must(HavePermittedExtension)
            .WithMessage("Tipo de arquivo não permitido.");

        RuleFor(file => file.ContentType)
            .NotNull()
            .Must(HavePermittedContentType)
            .WithMessage("Tipo de conteúdo do arquivo não permitido.");
    }

    private bool HavePermittedExtension(string fileName)
    {
        var extension = System.IO.Path.GetExtension(fileName).ToLowerInvariant();
        return _permittedExtensions.Contains(extension);
    }

    private bool HavePermittedContentType(string contentType)
    {
        return _permittedContentTypes.Contains(contentType);
    }
}

public class CustomViewModel
{
    public IList<IFormFile> Files { get; set; }
}

public class CustomValidator : AbstractValidator<CustomViewModel>
{
    public CustomValidator()
    {
        RuleForEach(x => x.Files).SetValidator(new FileValidator());
    }
}
```

Este código define um `FileValidator` que verifica a extensão e o tipo de conteúdo do arquivo, além de garantir que o tamanho do arquivo não exceda 100 MB. O `CustomValidator` aplica essas regras a cada arquivo na lista de arquivos do `CustomViewModel`.

Se precisar de mais alguma coisa, estou aqui para ajudar! 😊

Fonte: conversa com o Copilot, 07/08/2024
(1) asp.net core - How to validate uploaded files by FluentValidation .... https://stackoverflow.com/questions/59358252/how-to-validate-uploaded-files-by-fluentvalidation.
(2) c# - How to validate files with FluentValidation - Stack Overflow. https://stackoverflow.com/questions/72866914/how-to-validate-files-with-fluentvalidation.
(3) github.com. https://github.com/kiembully/cheapestessay_v2/tree/f77ad873c94c450ab90a16b7c023be10556075ee/functions%2Fdist%2Fam-starter-pack%2Fserver%2Fmain.js.






 